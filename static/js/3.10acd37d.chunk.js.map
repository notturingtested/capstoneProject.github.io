{"version":3,"sources":["resources/l10n.js","resources/_.js","resources/moment.js","resources/util/NumberFormatter.js","resources/util/MetricFormatter.js","resources/d3.js","resources/sleep.js","resources/charts/VizConstants.js","resources/analytics/guid.js","resources/charts/VegaViz.js","resources/charts/ForceDirected/ForceDirectedMarks.js","resources/charts/ForceDirected/ForceDirectedScales.js","resources/charts/ForceDirected/ForceDirectedSignals.js","resources/charts/ForceDirected/ForceDirectedVegaDataFormatter.js","resources/charts/VizTooltip.js","resources/charts/ForceDirected/ForceDirectedExpressionFunctions.js","resources/charts/ForceDirected/ForceDirectedTooltip.js","resources/charts/ForceDirected/ForceDirected.js"],"names":["l10nifyGlobal","window","l10nify","defaultConfig","validLocales","translations","currentLocale","showL10nTokens","location","href","includes","documentationCodes","de_DE","en_US","es_ES","fr_FR","ja_JP","ko_KR","pt_BR","zh_CN","zh_TW","documentationCodesHelpx","l10n","this","_currentLocale","translate","bind","config","newInstance","params","a","L10nConfig","value","Error","JSON","stringify","replace","translatedValue","key","Array","isArray","getl10nSprintfValueFromTemplateTag","apply","splice","reduce","b","concat","length","undefined","getKeyFromValue","translationsByLocale","sprintf","hasKey","Object","prototype","hasOwnProperty","call","forEach","method","_","originalFn","args","array","isObservableList","console","error","an","get","obj","path","defaultValue","val","isFunction","isDefined","isUndefined","noConflict","moment","require","NumberFormatter","number","precision","decimalSeparator","thousandsSeparator","Number","Infinity","isNaN","toString","getPrecision","Math","min","toFixed","split","left","right","containsNonZeroNumbers","test","indexOf","substr","parseFloat","MetricFormatter","currencyCode","formatterOpts","numberFormatter","input","formattedNumber","isNegative","type","abbreviate","round","decimal","newNumber","negative","abs","duration","humanize","seconds","floor","minutes","hours","format","assign","numCommas","getCurrentPrecision","d3","sleep","timeInMs","Promise","resolve","setTimeout","CONSTANTS","Date","now","substring","delimiter","lowerCase","id","uuidv4","toUpperCase","VegaViz","opts","_setOpts","data","isUnitTest","el","innerHTML","refresh","_opts","options","optionOverrides","_numberFormatter","_callOptsHandler","ids","locale","metricFormatter","ForceDirectedMarks","compact","getNodeMarks","getNodeTextMarks","getLinkMarks","name","zindex","from","on","trigger","modify","values","encode","enter","fill","scale","field","stroke","tooltip","signal","size","update","cursor","transform","getForceTransform","iterations","restart","static","forces","force","x","y","radius","strength","links","distance","align","baseline","fontSize","text","interactive","chartID","strokeWidth","shape","sourceX","sourceY","targetX","targetY","getMarks","ForceDirectedScales","getColorScales","getVolumeScale","domain","range","scheme","zero","getScales","ForceDirectedSignals","getCx","getCy","getNodeRadius","getNodeCharge","getLinkDistance","getStatic","getFix","getClicked","getNode","getRestart","allowSignalBinds","max","step","log","description","events","getSignals","ForceDirectedVegaDataFormatter","formattedData","aggregateData","formatDataForVega","VizTooltip","targetRect","boundaryRect","content","orientation","padding","parent","tipDiv","selectAll","cx","width","cy","height","dx","dy","tipDivEnter","append","classed","attr","style","select","html","node","appendChild","tipDivNotch","tipNode","offsetWidth","offsetHeight","top","clamp","setTopAndLeft","_orientation","tempLeft","tempTop","nextViableOrientation","orientationPreference","invalidOrientations","push","filter","determineNextViableOrientation","dimensions","LineExpressionFunctions","vega","chartsOpts","allCharts","expressionFunction","getAllCharts","link","chartOpts","topEdges","getTopVolumeEdges","i","source","datum","target","swatchColors","volume","adjustedVolume","parseInt","ForceDirectedTooltip","item","bounds","x2","x1","y2","y1","getItemWidth","getItemHeight","event","currentTooltip","layerY","layerX","xy","sqrt","pow","handler","isEqualTooltip","mark","container","_el","vegaType","checkIfOverNode","tooltipCancelId","removeTooltip","nodeTooltipContent","clearTimeout","showTooltip","getComputedStylePropertyValue","property","getComputedStyle","document","body","getPropertyValue","trim","vegaEmbed","ForceDirectedExpressionFunctions","registerStaticExpressions","ForceDirected","guid","setupChart","currentRenderId","cancelPendingRenders","newPendingRenderId","destroy","validate","existing","querySelector","remove","vegaContainer","createElement","classList","add","shouldShowLoadingState","showLoadingState","chartOptions","clientHeight","clientWidth","ForceDirectedVegaFormatter","forceDirectedTooltip","tooltipCallback","show","registerChartInstance","vegaSpec","getChartConfig","embedOpts","vegaView","isCancelledRender","view","finalize","lastRenderId","renderId","$schema","autosize","contains","background","fontFamilies","axisLabelColor","axisGridColor","vizBackgroundColor","signals","create","marks","scales","bottom","ChartFactory","registerChart"],"mappings":"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","file":"static/js/3.10acd37d.chunk.js","sourcesContent":["/* @flow */\nimport getl10nSprintfValueFromTemplateTag from './util/getl10nSprintfValueFromTemplateTag';\nimport getKeyFromValue from './util/getKeyFromValue';\nimport sprintf from './util/sprintf';\n\nconst l10nifyGlobal = typeof window !== 'undefined' && typeof window.l10nify !== 'undefined' ? window.l10nify : {};\nconst defaultConfig = {};\ndefaultConfig.validLocales = l10nifyGlobal.validLocales || ['en_US'];\ndefaultConfig.translations = l10nifyGlobal.translations || {};\ndefaultConfig.currentLocale = l10nifyGlobal.currentLocale || 'en_US';\ndefaultConfig.showL10nTokens = typeof l10nifyGlobal.showL10nTokens === 'boolean' ? l10nifyGlobal.showL10nTokens : false;\n\nif (\n\ttypeof window !== 'undefined' &&\n\twindow.location &&\n\twindow.location.href &&\n\twindow.location.href.includes &&\n\twindow.location.href.includes('showL10nTokens=true')\n) {\n\tdefaultConfig.showL10nTokens = true;\n}\n\nconst documentationCodes = {\n\tde_DE: 'de-DE',\n\ten_US: 'en',\n\tes_ES: 'es-ES',\n\tfr_FR: 'fr-FR',\n\tja_JP: 'ja-JP',\n\tko_KR: 'ko-KR',\n\tpt_BR: 'pt-BR',\n\tzh_CN: 'zh-Hans',\n\tzh_TW: 'zh-Hant',\n};\n\n// We need separate documentation codes for helpx.adobe.com since they use different locale codes.\nconst documentationCodesHelpx = {\n\tde_DE: 'de',\n\ten_US: 'en',\n\tes_ES: 'es',\n\tfr_FR: 'fr',\n\tja_JP: 'jp',\n\tko_KR: 'kr',\n\tpt_BR: 'br',\n\tzh_CN: 'cn',\n\tzh_TW: 'tw',\n};\n\nclass L10nConfig {\n\tconstructor({\n\t\tvalidLocales = defaultConfig.validLocales,\n\t\ttranslations = defaultConfig.translations,\n\t\tcurrentLocale = defaultConfig.currentLocale,\n\t\tshowL10nTokens = defaultConfig.showL10nTokens,\n\t} = {}) {\n\t\tthis.validLocales = validLocales;\n\t\tthis.translations = translations;\n\t\tthis._currentLocale = currentLocale;\n\t\tthis.showL10nTokens = showL10nTokens;\n\n\t\t// The translate method is what will be externally available. It needs access to config\n\t\t// and thus we will bind it to this. Furthermore, we want to be able to copy the l10n\n\t\t// instance at any time and will therefore also assign a \"newInstance\" method to it.\n\t\t// This is particularly important for a node server where we could have multiple instances\n\t\t// of l10n with different locales.\n\t\tthis.translate = this.translate.bind(this);\n\t\tthis.translate.config = this;\n\n\t\tthis.translate.newInstance = (params = {}) => {\n\t\t\tlet a = new L10nConfig({\n\t\t\t\t...{\n\t\t\t\t\tvalidLocales: [...this.validLocales],\n\t\t\t\t\ttranslations: { ...this.translations },\n\t\t\t\t\tcurrentLocale: this.currentLocale,\n\t\t\t\t\tshowL10nTokens: this.showL10nTokens,\n\t\t\t\t},\n\t\t\t\t...params,\n\t\t\t});\n\t\t\treturn a.translate;\n\t\t};\n\t}\n\n\tget currentLocale() {\n\t\treturn this._currentLocale;\n\t}\n\n\tset currentLocale(value) {\n\t\tif (!this.validLocales.includes(value)) {\n\t\t\tthrow new Error(\n\t\t\t\t`${value} is not a valid locale. Valid locales include ${JSON.stringify(this.validLocales)}`,\n\t\t\t);\n\t\t}\n\t\tthis._currentLocale = value;\n\t}\n\n\tget currentLocaleForDocs() {\n\t\treturn documentationCodes[this._currentLocale];\n\t}\n\n\tget currentLocaleForHelpx() {\n\t\treturn documentationCodesHelpx[this._currentLocale];\n\t}\n\n\t//use this as the second parameter for string.localeCompare\n\t//if you try to use currentLocale for string.localeCompare, it will not work\n\tget currentIETFLocaleCode() {\n\t\tconst l10nToLocale = {\n\t\t\tde_DE: 'de',\n\t\t\ten_US: 'en',\n\t\t\tes_ES: 'es',\n\t\t\tfr_FR: 'fr',\n\t\t\tja_JP: 'ja',\n\t\t\tko_KR: 'ko',\n\t\t\tpt_BR: 'pt-br',\n\t\t\tzh_CN: 'zh-cn',\n\t\t\tzh_TW: 'zh-tw',\n\t\t};\n\t\treturn l10nToLocale[this._currentLocale];\n\t}\n\n\tupdate(params) {\n\t\tif (!params) {\n\t\t\treturn;\n\t\t}\n\t\tthis.validLocales = params.validLocales || this.validLocales;\n\t\tthis.translations = params.translations || this.translations;\n\t\tthis._currentLocale = params.currentLocale || this._currentLocale;\n\t\tthis.showL10nTokens = params.showL10nTokens || this.showL10nTokens;\n\t}\n\n\ttranslate(value /*: string */, ...replace /*: ?Array<any> */) /*: string */ {\n\t\tlet key = null;\n\t\tif (Array.isArray(value)) {\n\t\t\tvalue = getl10nSprintfValueFromTemplateTag.apply(null, [value, ...replace]);\n\t\t} else {\n\t\t\t// The key is the first value followed by the replace values.\n\t\t\t// This assumes someone called this function like this:\n\t\t\t// l10n('Hello %s World', 'customKey_2342930AAAABBBB', ['Sweet']);\n\t\t\tif (typeof replace[0] === 'string') {\n\t\t\t\tkey = replace[0];\n\t\t\t\treplace.splice(0, 1);\n\t\t\t}\n\t\t\t// Flatten the array.\n\t\t\treplace = replace.reduce((a, b) => a.concat(b), []);\n\n\t\t\t// Some functions always pass in a replace value, such as l10n-filter. If they pass in undefined, we want to remove it.\n\t\t\tif (replace.length === 1 && replace[0] === undefined) {\n\t\t\t\treplace = [];\n\t\t\t}\n\t\t}\n\n\t\tkey = key || getKeyFromValue(value);\n\n\t\tlet translatedValue;\n\t\tconst translationsByLocale = this.translations[this.currentLocale] || {};\n\t\tif (Array.isArray(replace) && replace.length) {\n\t\t\ttranslatedValue = sprintf(translationsByLocale[key] || value, replace);\n\t\t} else {\n\t\t\ttranslatedValue = translationsByLocale[key] || value;\n\t\t}\n\n\t\tif (this.showL10nTokens) {\n\t\t\tconst hasKey = Object.prototype.hasOwnProperty.call(translationsByLocale, key);\n\t\t\treturn `{Key: ${key} HasKey: ${hasKey} Value: ${translatedValue}}`;\n\t\t}\n\n\t\treturn translatedValue;\n\t}\n}\n\nlet l10nConfig = new L10nConfig();\nconst l10n = l10nConfig.translate;\n\nexport { l10n as default, L10nConfig };\n","/* @flow */\n\nimport _ from 'lodash';\n\n/* ::\n\ttype TemplateOptions = {\n\t\tescape?: RegExp,\n\t\tevaluate?: RegExp,\n\t\timports?: Object,\n\t\tinterpolate?: RegExp,\n\t\tsourceURL?: string,\n\t\tvariable?: string\n\t};\n*/\n\n/* ::\n\ttype Lodash = {\n\n\t\t// Array Functions\n\t\tchunk: (array: Array<any>, size?: number) => Array<any>,\n\t\tcompact: (list: Array<any>) => Array<any>,\n\t\tdifference: (array: Array<any>, ...values: Array<any>) => Array<any>,\n\t\tdrop: (array: Array<any>, n?: number) => Array<any>,\n\t\tdropRight: (array: Array<any>, n?: number) => Array<any>,\n\t\tdropRightWhile: (array: Array<any>, predicate: Function|Object|string, thisArg?:any) => Array<any>,\n\t\tdropWhile: (array: Array<any>, predicate: Function|Object|string, thisArg?:any) => Array<any>,\n\t\tfill: (array: Array<any>, value: any, start?: number, end?: number) => Array<any>,\n\t\tfindIndex: (array: Array<any>, predicate: Function|Object|string, thisArg?:any) => number,\n\t\tfindLastIndex: (array: Array<any>, predicate: Function|Object|string, thisArg?:any) => number,\n\t\tfirst: (array: Array<any>) => any,\n\t\tflatten: (array:Array<any>, isDeep?:boolean) => Array<any>,\n\t\tflattenDeep: (array:Array<any>) => Array<any>,\n\t\thead: (array: Array<any>) => any,\n\t\tindexOf: (array: Array<any>, value: any, fromIndex?: number) => number,\n\t\tinitial: (array: Array<any>) => Array<any>,\n\t\tintersection: (...arrays: Array<any>) => Array<any>,\n\t\tlast: (array: Array<any>|NodeList) => any,\n\t\tlastIndexOf: (array: Array<any>, value: any, fromIndex?: number) => number,\n\t\tpull: (array: Array<any>, values: Array<any>) => Array<any>,\n\t\tpullAt: (array: Array<any>, indexes: number|Array<number>) => Array<any>,\n\t\tremove: (array: Array<any>, predicate: Function|Object|string, thisArg?: any) => Array<any>,\n\t\trest: (array: Array<any>) => Array<any>,\n\t\tslice: (array: Array<any>, start?: number, end?: number) => Array<any>,\n\t\tsortedIndex: (array: Array<any>, value: any, iteratee: Function|Object|string, thisArg?: any) => number,\n\t\tsortedLastIndex: (array: Array<any>, value: any, iteratee: Function|Object|string, thisArg?: any) => number,\n\t\ttail: (array: Array<any>) => Array<any>,\n\t\ttake: (array: Array<any>, n?: number) => Array<any>,\n\t\ttakeRight: (array: Array<any>, n?: number) => Array<any>,\n\t\ttakeRightWhile: (array: Array<any>, predicate: Function|Object|string, thisArg?: any) => Array<any>,\n\t\ttakeWhile: (array: Array<any>, predicate: Function|Object|string, thisArg?: any) => Array<any>,\n\t\tunion: (...arrays: Array<any>) => Array<any>,\n\t\tuniq: (array: Array<any>, isSorted?: boolean, iteratee?: Function|Object|string, thisArg?: any) => Array<any>,\n\t\tunique: (array: Array<any>, isSorted?: boolean, iteratee?: Function|Object|string, thisArg?: any) => Array<any>,\n\t\tunzip: (array: Array<any>) => Array<any>,\n\t\tunzipWith: (array: Array<any>, iteratee?: Function, thisArg?: any) => Array<any>,\n\t\twithout: (array: Array<any>, ...values: Array<any>) => Array<any>,\n\t\txor: (...arrays: Array<any>) => Array<any>,\n\t\tzip: (...arrays: Array<any>) => Array<any>,\n\t\tzipObject: (props: Array<any>, values: Array<any>) => Object,\n\t\tzipWith: (arrays: Array<any>, iteratee?: Function, thisArg?: any) => Array<any>,\n\n\t\t// Collection Functions\n\t\tall: (collection: Array<any>|Object|string, predicate: Function|Object|string, thisArg?: any) => boolean,\n\t\tany: (collection: Array<any>|Object|string, predicate:Function|Object|string, thisArg?:any) => boolean,\n\t\tat: (collection: Array<any>|Object|string, ...props?: Array<number|string>) => Array<any>,\n\t\tcollect: (collection: Array<any>|Object|string, iteratee: Function|Object|string, thisArg?:any) => Array<any>,\n\t\tcontains: (collection: Array<any>|Object|string, target:any, fromIndex?: number) => boolean,\n\t\tcountBy: (collection: Array<any>|Object|string, iteratee: Function|Object|string, thisArg?: any) => Object,\n\t\tdetect: (collection: Array<any>|Object|string, predicate:Function|Object|string, thisArg?:any) => any,\n\t\teach: (collection: Array<any>|Object|string, iteratee:Function, thisArg?:any) => Array<any>|Object|string,\n\t\teachRight: (collection: Array<any>|Object|string, iteratee:Function, thisArg?:any) => Array<any>|Object|string,\n\t\tevery: (collection: Array<any>|Object|string, predicate: Function|Object|string, thisArg?: any) => boolean,\n\t\tfilter: (collection: Array<any>|Object|string, predicate:Function|Object|string, thisArg?:any) => Array<any>,\n\t\tfind: (collection: Array<any>|Object|string, predicate:Function|Object|string, thisArg?:any) => any,\n\t\tfindLast: (collection: Array<any>|Object|string, predicate:Function|Object|string, thisArg?:any) => any,\n\t\tfindWhere: (collection: Array<any>|Object|string, source:Object) => any,\n\t\tfoldl: (collection: Array<any>|Object|string, iteratee: Function|Object|string, accumulator?: any, thisArg?: any) => any,\n\t\tfoldr: (collection: Array<any>|Object|string, iteratee: Function|Object|string, accumulator?: any, thisArg?: any) => any,\n\t\tforEach: (collection: Array<any>|Object|string, iteratee:Function, thisArg?:any) => Array<any>|Object|string,\n\t\tforEachRight: (collection: Array<any>|Object|string, iteratee:Function, thisArg?:any) => Array<any>|Object|string,\n\t\tgroupBy: (collection: Array<any>|Object|string, iteratee:Function, thisArg?:any) => Object,\n\t\tinclude: (collection: Array<any>|Object|string, target:any, fromIndex?: number) => boolean,\n\t\tincludes: (collection: Array<any>|Object|string, target:any, fromIndex?: number) => boolean,\n\t\tindexBy: (collection: Array<any>|Object|string, iteratee:Function|Object|string, thisArg?:any) => Object,\n\t\tinject: (collection: Array<any>|Object|string, iteratee: Function|Object|string, accumulator?: any, thisArg?: any) => any,\n\t\tinvoke: (collection: Array<any>|Object|string, path: Array<any>|Function|string, ...args?:Array<any>) => Array<any>,\n\t\tmap: (collection: Array<any>|Object|string, iteratee: Function|Object|string, thisArg?:any) => Array<any>,\n\t\tpartition: (collection:Array<any>|Object|string, predicate: Function|Object|string, thisArg?:any) => Array<any>,\n\t\tpluck: (collection: Array<any>|Object|string, path:string) => Array<any>,\n\t\treduce: (collection: Array<any>|Object|string, iteratee: Function|Object|string, accumulator?: any, thisArg?: any) => any,\n\t\treduceRight: (collection: Array<any>|Object|string, iteratee: Function|Object|string, accumulator?: any, thisArg?: any) => any,\n\t\treject: (collection: Array<any>|Object|string, predicate:Function|Object|string, thisArg?:any) => Array<any>,\n\t\tsample: (collection: Array<any>|Object|string, n?: number) => any,\n\t\tselect: (collection: Array<any>|Object|string, predicate:Function|Object|string, thisArg?:any) => Array<any>,\n\t\tshuffle: (collection: Array<any>|Object|string) => Array<any>,\n\t\tsize: (collection: Array<any>|Object|string) => number,\n\t\tsome: (collection: Array<any>|Object|string, predicate:Function|Object|string, thisArg?:any) => boolean,\n\t\tsortBy: (collection: Array<any>|Object|string, predicate:Function|Object|string, thisArg?:any) => Array<any>,\n\t\tsortByAll: (collection: Array<any>|Object|string, iteratees:Function|Object|string|Array<Function|Object|string>) => Array<any>,\n\t\tsortByOrder: (collection: Array<any>|Object|string, iteratees:Function|Object|string|Array<Function|Object|string>, orders:Array<string>) => Array<any>,\n\t\twhere: (collection: Array<any>|Object|string, source:Object) => Array<any>,\n\n\t\t// Object Functions\n\t\tassign: (object: Object, sources: Array<Object>, customizer?: Function, thisArg?: any) => Object,\n\t\tcreate: (prototype: Object, properties?: Object) => Object,\n\t\tdefaults: (object: Object, ...sources?:Array<Object>) => Object,\n\t\tdefaultsDeep: (object: Object, ...sources?:Array<Object>) => Object,\n\t\textend: (object: Object, ...sources:Array<Object>) => Object,\n\t\tfindKey: (object: Object, predicate: Function|Object|string, thisArg?: any) => string|null,\n\t\tfindLastKey: (object: Object, predicate?: Function|Object|string, thisArg?: any) => string|null,\n\t\tforIn: (object: Object, iteratee?: Function, thisArg?: *) => Object,\n\t\tforInRight: (object: Object, iteratee?: Function, thisArg?: *) => Object,\n\t\tforOwn: (object: Object, iteratee?: Function, thisArg?: *) => Object,\n\t\tforOwnRight: (object: Object, iteratee?: Function, thisArg?: *) => Object,\n\t\tfunctions: (object: Object) => Array<string>,\n\t\tget: (object: any, path: Array<string>|string|number, defaultValue?: any) => any,\n\t\thas: (object: Object, path: Array<any>|string) => boolean,\n\t\tinvert: (object: Object, multiValue?: boolean) => Object,\n\t\tkeys: (object: Object) => Array<string>,\n\t\tkeysIn: (object: Object) => Array<string>,\n\t\tmapKeys: (object: Object, iteratee: Function|Object|string, thisArg?: any) => Object,\n\t\tmapValues: (object: Object, iteratee: Function|Object|string, thisArg?: any) => Object,\n\t\tmerge: (object: Object, ...sources: Array<Object>) => Object,\n\t\tmethods: (object: Object) => Array<string>,\n\t\tomit: (object: Object, predicate: Function|string|Array<string>, thisArg?:any) => Object,\n\t\tpairs: (object: Object) => Array<any>,\n\t\tpick: (object: Object, predicate: Function|string|Array<string>, thisArg?:any) => Object,\n\t\tresult: (object: Object, path: Array<string>|string, defaultValue?: any) => any,\n\t\tset: (object: Object, path: Array<any>|string, value:any) => Object,\n\t\ttransform: (object: Object, iteratee?: Function, accumulator?: any, thisArg?: any) => any,\n\t\tvalues: (object: Object) => Array<any>,\n\t\tvaluesIn: (object: Object) => Array<any>,\n\t\tisPlainObject: (object: Object) => boolean,\n\n\t\t// String Functions\n\t\tcamelCase: (string: string) => string,\n\t\tcapitalize: (string: string) => string,\n\t\tdeburr: (string: string) => string,\n\t\tendsWith: (string: string, target: string, position?: number) => boolean,\n\t\tescape: (string: string) => string,\n\t\tescapeRegExp: (string: string) => string,\n\t\tkebabCase: (string: string) => string,\n\t\tpad: (string: string, length?: number, chars?: string) => string,\n\t\tpadLeft: (string: string, length?: number, chars?: string) => string,\n\t\tpadRight: (string: string, length?: number, chars?: string) => string,\n\t\tparseInt: (string: string, radix?: number) => number,\n\t\trepeat: (string: string, n: number) => number,\n\t\tsnakeCase: (string: string) => string,\n\t\tstartCase: (string: string) => string,\n\t\tstartsWith: (string: string, target: string, position?: number) => boolean,\n\t\ttemplate: (string: string, options: TemplateOptions) => Function,\n\t\ttrim: (string: string, chars?: string) => string,\n\t\ttrimLeft: (string: string, chars?: string) => string,\n\t\ttrimRight: (string: string, chars?: string) => string,\n\t\ttrunc: (string: string, options: Object|number) => string,\n\t\tunescape: (string: string) => string,\n\t\twords: (string: string, pattern: RegExp|string) => Array<string>,\n\n\n\t\t// \"Lang\" Functions\n\t\tisElement: (value: any) => boolean,\n\t\tisString: (value: any) => boolean,\n\t\tisFunction: (value: any) => boolean,\n\t\tisArray: (value: any) => boolean,\n\t\tdelay: (func: Function, wait: number, ...args?: any) => number,\n\t\tclone: (value: any) => \tany,\n\t\tisUndefined: (value: any) => boolean\n\t};\n*/\n\n///////////    ObersvableList overrides     //////////////////////////\n//Some lodash function will bypass the methods overridden by ObservableList, so we will print a warning to the console if they are used\n//For example _.pull will use Array.splice.call() under the covers, which will bypass the Observable List's splice method, and no change events will get fired\nlet methodsThatRequireWarning = ['pull', 'remove', 'fill', 'pullAt']; //all the methods that mutate the passed in array\nmethodsThatRequireWarning.forEach(method => {\n\tif (_[method]) {\n\t\tlet originalFn = _[method];\n\t\t_[method] = (...args) => {\n\t\t\tlet array = args[0];\n\t\t\tif (array.isObservableList) {\n\t\t\t\tconsole.error(\n\t\t\t\t\t`WARNING: Do not use _.${method} with an observable list - change events will not be emitted. Check ObservableList.js for the appropriate helper function`,\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn originalFn.apply(_, args);\n\t\t};\n\t}\n});\n\n_.an = _.an || {};\n\n// Gets a value, and allows for a function to be used, with params.\n_.an.get = function(obj, path, defaultValue, ...params) {\n\tlet val = _.get(obj, path);\n\tif (_.isFunction(val)) {\n\t\tval = val.apply(obj, params);\n\t}\n\tif (val === undefined) {\n\t\tval = defaultValue;\n\t}\n\treturn val;\n};\n\n// Lodash should have isDefined, so we are adding it ;)\n_.isDefined = function(val) {\n\treturn !_.isUndefined(val);\n};\n\n_.noConflict();\n\nexport default _;\n","/* eslint global-require:0 */\n\nconst moment = require('moment');\n\nrequire('moment/locale/fr');\nrequire('moment/locale/zh-cn');\nrequire('moment/locale/zh-tw');\nrequire('moment/locale/de');\nrequire('moment/locale/es');\nrequire('moment/locale/pt-br');\nrequire('moment/locale/ja');\nrequire('moment/locale/ko');\n\nexport default moment;\n","// TODO: Update import below.\n//import { l10n } from '@analytics/l10nify';\nimport { l10n } from './../analytics/l10nify';\n\nexport default class NumberFormatter {\n\tformat(number, { precision = 0, decimalSeparator = '.', thousandsSeparator = ',' } = {}) {\n\t\tif (typeof number !== 'number') {\n\t\t\tnumber = Number(number);\n\t\t}\n\n\t\tif (number === Infinity) {\n\t\t\treturn l10n('Infinity');\n\t\t}\n\n\t\tif (Number.isNaN(number)) {\n\t\t\treturn number.toString();\n\t\t}\n\n\t\tif (precision === -1) {\n\t\t\tprecision = this.getPrecision(number);\n\t\t}\n\n\t\tprecision = Math.min(precision, 20);\n\n\t\t// round number to given precision (adds decimalSeparator character)\n\t\tnumber = number.toFixed(precision);\n\n\t\t// add thousand separators and convert to string\n\t\tlet [left, right] = number.toString().split('.');\n\n\t\t// right will be undefined if precision is zero\n\t\tright = precision && typeof right !== 'undefined' ? '.' + right : '';\n\n\t\tnumber = left.replace(/\\B(?=(\\d{3})+(?!\\d))/g, 'thousandsSeparator') + right;\n\n\t\t// replace decimal and thousand separator with custom characters\n\t\tnumber = number.replace(/\\./g, decimalSeparator);\n\t\tnumber = number.replace(/thousandsSeparator/g, thousandsSeparator);\n\n\t\tlet containsNonZeroNumbers = /[1-9]+/.test(number);\n\t\tif (number.indexOf('-') === 0 && !containsNonZeroNumbers) {\n\t\t\t// If it is negative, and there are no numbers other than zero, then remove the negative. We don't want -0\n\t\t\tnumber = number.substr(1);\n\t\t}\n\n\t\treturn number;\n\t}\n\n\t/**\n\t * find the number of place after the decimal point of the given number\n\t * @param {number} number\n\t * @return {number} the precision of number\n\t */\n\tgetPrecision(number) {\n\t\treturn (number + '.').split('.')[1].length; // Always add an extra decimal so there are at least 2 elements in the array.\n\t}\n\n\t/**\n\t * Convert a number to the given precision. This will fix floating point problems with doing math on numbers\n\t *\n\t * Example:\n\t * 1.45 - 1 => 0.44999999999999996\n\t * numberToPrecision(1.45 - 1, 2) => 0.45\n\t *\n\t * @param {number} number\n\t * @param {number} precision - the number of places after the decimal point.\n\t * @return {number} the number with the precision applied\n\t */\n\tnumberToPrecision(number, precision) {\n\t\treturn parseFloat(Number(number).toFixed(precision));\n\t}\n}\n","/* @flow */\n/*jshint camelcase: false */\n\n// TODO: Update import below.\n//import { l10n } from '@analytics/l10nify';\nimport { l10n } from './../analytics/l10nify';\nimport _ from './../_';\nimport moment from './../moment';\nimport NumberFormatter from './NumberFormatter';\n\nexport default class MetricFormatter {\n\tconstructor({ currencyCode = 'USD', thousandsSeparator = ',', decimalSeparator = '.' } = {}) {\n\t\tthis.currencyCode = currencyCode;\n\t\tthis.formatterOpts = { decimalSeparator: decimalSeparator, thousandsSeparator: thousandsSeparator };\n\t\tthis.numberFormatter = new NumberFormatter();\n\t}\n\n\t// Params:\n\t// type       =  int* | time | percent | currency | raw\n\t// precision  = number of decimal places to show\n\t// abbreviate = should the number be abbreviated\n\tformat(input, { type = 'int', precision = 0, abbreviate = false } = {}) {\n\t\t// Converts a string to a number, using the current decimalSeparator. If precision is used, it rounds the number to the precision.\n\t\t// For example '-1,234,333.455' converts to -123433.46 if precision is 2.\n\t\tif (type === 'raw') {\n\t\t\tif (typeof input === 'number') {\n\t\t\t\treturn this.round(input, precision);\n\t\t\t}\n\t\t\tif (typeof input === 'string') {\n\t\t\t\tlet [value, decimal] = input.split(this.formatterOpts.decimalSeparator);\n\t\t\t\tif (value === undefined) {\n\t\t\t\t\tvalue = '0';\n\t\t\t\t}\n\t\t\t\tif (decimal === undefined) {\n\t\t\t\t\tdecimal = '0';\n\t\t\t\t}\n\n\t\t\t\tlet isNegative = value.indexOf('-') !== -1;\n\t\t\t\tvalue = parseFloat(value.replace(/[^0-9]/g, ''));\n\t\t\t\tdecimal = parseFloat('0.' + decimal.replace(/[^0-9]/g, ''));\n\t\t\t\tlet newNumber = value + decimal;\n\t\t\t\tif (isNegative) {\n\t\t\t\t\tnewNumber *= -1;\n\t\t\t\t}\n\t\t\t\treturn this.round(newNumber, precision);\n\t\t\t}\n\t\t}\n\n\t\t//Convert the input to 0 if it is not a number.\n\t\tinput = +input || 0;\n\n\t\tif (type === 'time') {\n\t\t\tlet negative = input < 0;\n\t\t\tinput = Math.abs(input);\n\n\t\t\tlet currLocale = l10n.config.currentLocale;\n\t\t\tif (abbreviate) {\n\t\t\t\t// displays human readable text, 'a minute' or '9 months'\n\t\t\t\treturn (negative ? '- ' : '') + moment.duration(input * 1000).humanize();\n\t\t\t} else {\n\t\t\t\t// displays in the format HH:MM:SS\n\t\t\t\tlet seconds = Math.floor(input % 60);\n\t\t\t\tlet minutes = Math.floor((input / 60) % 60);\n\t\t\t\tlet hours = Math.floor(input / 60 / 60);\n\t\t\t\treturn (\n\t\t\t\t\t(negative ? '-' : '') +\n\t\t\t\t\t(hours < 10 ? '0' : '') +\n\t\t\t\t\thours.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, this.formatterOpts.thousandsSeparator) +\n\t\t\t\t\t':' +\n\t\t\t\t\t(minutes < 10 ? '0' : '') +\n\t\t\t\t\tminutes +\n\t\t\t\t\t':' +\n\t\t\t\t\t(seconds < 10 ? '0' : '') +\n\t\t\t\t\tseconds\n\t\t\t\t);\n\t\t\t}\n\t\t} else if (type === 'percent') {\n\t\t\treturn (\n\t\t\t\tthis.numberFormatter.format(input * 100, Object.assign({ precision: precision }, this.formatterOpts)) +\n\t\t\t\t'%'\n\t\t\t);\n\t\t}\n\n\t\t// for all other metric types, format the number (add commas, decimals, and abbreviate if specified)\n\t\tlet formattedNumber;\n\t\tlet isNegative;\n\n\t\tif (input < 0) {\n\t\t\tisNegative = true;\n\t\t\tinput *= -1;\n\t\t}\n\n\t\tif (abbreviate) {\n\t\t\t// abbreviate big numbers with letters (13560 becomes 13.6K)\n\t\t\tif (input >= 1000 && input < 1e15) {\n\t\t\t\tformattedNumber = this.numberFormatter.format(input, this.formatterOpts); // adds thousand separators, eliminates precision\n\t\t\t\tformattedNumber = formattedNumber.split(this.formatterOpts.thousandsSeparator);\n\t\t\t\tconst numCommas = formattedNumber.length - 1;\n\n\t\t\t\t// determine if it's an even thousand/million/etc (ie 12,000 would display 12k rather than 12.0k)\n\t\t\t\tif (formattedNumber[1] !== '000') {\n\t\t\t\t\tformattedNumber = Number(formattedNumber[0] + '.' + formattedNumber[1]);\n\t\t\t\t\tformattedNumber = this.numberFormatter.format(\n\t\t\t\t\t\tformattedNumber,\n\t\t\t\t\t\tObject.assign({ precision: precision }, this.formatterOpts),\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tformattedNumber = formattedNumber[0];\n\t\t\t\t}\n\n\t\t\t\t// add on abbreviation letter\n\t\t\t\tif (numCommas === 1) {\n\t\t\t\t\tformattedNumber = l10n('%sK', [formattedNumber]);\n\t\t\t\t} else if (numCommas === 2) {\n\t\t\t\t\tformattedNumber = l10n('%sM', [formattedNumber]);\n\t\t\t\t} else if (numCommas === 3) {\n\t\t\t\t\tformattedNumber = l10n('%sB', [formattedNumber]);\n\t\t\t\t} else if (numCommas === 4) {\n\t\t\t\t\tformattedNumber = l10n('%sT', [formattedNumber]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tformattedNumber = this.numberFormatter.format(input, this.formatterOpts); // adds thousand separators, eliminates precision\n\t\t\t}\n\t\t} else {\n\t\t\tformattedNumber = this.numberFormatter.format(\n\t\t\t\tinput,\n\t\t\t\tObject.assign({ precision: precision }, this.formatterOpts),\n\t\t\t); // rounds to precision and adds thousand separators\n\t\t}\n\n\t\tif (type === 'currency') {\n\t\t\tif (this.currencyCode === 'USD') {\n\t\t\t\tformattedNumber = '$' + formattedNumber;\n\t\t\t} else {\n\t\t\t\tformattedNumber = formattedNumber + ' ' + this.currencyCode;\n\t\t\t}\n\t\t}\n\n\t\tlet containsNonZeroNumbers = /[1-9]+/.test(formattedNumber); // See if there are any non-zero numbers in the formatted string.\n\n\t\t// We only need to add a negative sign if there are non-zero numbers in the string. We don't want to output -0 or -0.0\n\t\tif (isNegative && containsNonZeroNumbers) {\n\t\t\tformattedNumber = '-' + formattedNumber;\n\t\t}\n\n\t\treturn formattedNumber;\n\t}\n\n\tround(number, precision) {\n\t\tif (precision === -1) {\n\t\t\tprecision = this.getCurrentPrecision(number);\n\t\t}\n\t\treturn _.round(number, precision);\n\t}\n\n\t// Gets the curent precision for a given number.\n\t// This is useful if you want to format a number, keeping the current precision.\n\tgetCurrentPrecision(input) {\n\t\tinput = +input || 0;\n\t\treturn (input + '.').split('.')[1].length; // Always add an extra decimal so there are at least 2 elements in the array.\n\t}\n}\n","let d3Lib;\nif (typeof window !== 'undefined') {\n\td3Lib = window.d3;\n} else {\n\td3Lib = {};\n}\n\nconst d3 = d3Lib;\n\nexport default d3;\n","export default function sleep(timeInMs) {\n\treturn new Promise(resolve => setTimeout(resolve, timeInMs));\n}\n","export default {};\n\nlet CONSTANTS;\n\n// IMPORTANT NOTE: You can't call this until a chart is being rendered. Otherwise it will not give the body time to get the properties.\nexport function getConstants() {\n\tif (CONSTANTS) {\n\t\treturn CONSTANTS;\n\t}\n\tlet preferredFonts;\n\n\tCONSTANTS = {\n\t\tfontFamilies: `adobe-clean, Helvetica, Arial, sans-serif`,\n\t\taxisLabelColor: '#b2b2b2',\n\t\taxisGridColor: '#ebebeb',\n\t\tvizBackgroundColor: '#ffffff',\n\t};\n\n\tif (\n\t\ttypeof window !== 'undefined' &&\n\t\ttypeof window.document !== 'undefined' &&\n\t\ttypeof window.document.body !== 'undefined' &&\n\t\ttypeof getComputedStyle !== 'undefined'\n\t) {\n\t\t// returns a string similar to: \" adobe-clean, \"Noto Sans JP\", \"Noto Sans SC\", \"Noto Sans TC\", \"Noto Sans KR\"\n\t\tCONSTANTS.fontFamilies = `${getComputedStylePropertyValue('--aa-fonts')}, ${CONSTANTS.fontFamilies}`;\n\t\tCONSTANTS.axisLabelColor = getComputedStylePropertyValue('--aa-axis-label-color');\n\t\tCONSTANTS.axisGridColor = getComputedStylePropertyValue('--aa-axis-grid-color');\n\t\tCONSTANTS.vizBackgroundColor = getComputedStylePropertyValue('--aa-viz-bg');\n\t}\n\n\treturn CONSTANTS;\n}\n\nfunction getComputedStylePropertyValue(property) {\n\treturn getComputedStyle(document.body)\n\t\t.getPropertyValue(property)\n\t\t?.trim();\n}\n","/* eslint no-bitwise:0,no-nested-ternary:0,no-mixed-operators:0 */\n\nimport { v4 as uuidv4 } from 'uuid';\n\nlet dateNow =\n\tDate.now()\n\t\t.toString(16)\n\t\t.substring(5) + '-';\nlet count = 0;\n\nexport default {\n\tcreate: function({ delimiter = '-', lowerCase = false } = {}) {\n\t\tlet id = uuidv4(); // IE: '9b1deb4d-3b7d-4bad-9bdd-2b0d7b3dcb6d'\n\t\tif (delimiter !== '-') {\n\t\t\tid = id.replace(/-/g, delimiter);\n\t\t}\n\t\tif (!lowerCase) {\n\t\t\tid = id.toUpperCase();\n\t\t}\n\t\treturn id;\n\t},\n\tlight: function() {\n\t\tcount++;\n\t\t//Example: 775e67-15b\n\t\treturn dateNow + count.toString(16);\n\t},\n};\n","// Keep import below.\n// import { _, MetricFormatter } from '@analytics/core';\nimport { _, MetricFormatter } from './../analytics/core';\n\n// Params:\n// numberFormatter(number, {type:int* | time | percent | currency , precision:0 , abbreviate: false})\n\nexport default class VegaViz {\n  // Call this._setOpts\n\tconstructor(opts = {}) {\n\t\tthis._setOpts(opts);\n\t}\n\n\tasync draw(opts = {}) {\n    // Call this._setOpts\n\t\tthis._setOpts(opts);\n\t}\n\n  // If data is null, return false. If this is a unit test, return false.\n\tvalidate(data) {\n\t\tif (!data) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (this.isUnitTest) {\n\t\t\tthis.el.innerHTML = JSON.stringify(data, null, 2);\n\t\t\treturn false; // For now we always return false if it is a unit test so we don't try to render via cloudviz.\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tget isUnitTest() {\n\t\treturn !!window.isUnitTest;\n\t}\n\n\t// Calls update with the same opts previously used. Used for resizing.\n\trefresh() {\n\t\t// VegaVizComponent currently takes care of resizing via React's lifecycle methods\n\t\t// this.update(this._opts);\n\t}\n\n\tonResize() {\n\t\tthis.refresh();\n\t}\n\n\tdestroy() {\n\t\t// cleanup.\n\t}\n\n\t_callOptsHandler(method, args) {\n\t\tif (!this._opts[method]) {\n\t\t\treturn;\n\t\t}\n\t\treturn this._opts[method].apply(null, args);\n\t}\n\n\tformatNumber(value, options = {}, optionOverrides = null) {\n\t\treturn this._numberFormatter(value, optionOverrides ? Object.assign({}, options, optionOverrides) : options);\n\t}\n\n\tonMouseOver(...args) {\n\t\treturn this._callOptsHandler('onMouseOver', args);\n\t}\n\n\tonMouseOut(...args) {\n\t\treturn this._callOptsHandler('onMouseOut', args);\n\t}\n\n\tonContextMenu(...args) {\n\t\treturn this._callOptsHandler('onContextMenu', args);\n\t}\n\n\tonRender(...args) {\n\t\treturn this._callOptsHandler('onRender', args);\n\t}\n\n\thighlightDataByIds(ids) {\n\t\t/* implemented in subclass */\n\t}\n\n\tunhighlightData() {\n\t\t/* implemented in subclass */\n\t}\n\n\tonError(...args) {\n\t\tif (this.el && !this.isUnitTest) {\n\t\t\tthis.el.innerHTML = '';\n\t\t}\n\t\treturn this._callOptsHandler('onError', args);\n\t}\n\n\tget locale() {\n\t\treturn this._opts.locale || 'en-US';\n\t}\n\n\tget l10nConfig() {\n\t\treturn this._opts.l10n || {};\n\t}\n\n\t/*\n\t * opts should have a data property defined like:\n\t * opts = {\n\t * \tdata: {\n\t * \t\tdata: [value, value, value]\n\t * \t}\n\t * }\n\t *\n\t * or\n\t * opts = {\n\t * \ty: [value, value, value],\n\t * \tx: [value, value, value]\n\t * }\n\t */\n\t// AN-232139 - Don't call this outside of VegaViz, there are other opts that get injected in VegaVizComponent\n\t_setOpts(opts = {}) {\n    // Element passed into the class.\n    this.el = opts.el;\n\n    // assign the number formatter passed into the function, or\n    // create a new MetricFormatter() otherwise.\n\t\tif (opts.numberFormatter) {\n\t\t\tthis._numberFormatter = opts.numberFormatter;\n\t\t} else if (!this._numberFormatter) {\n\t\t\tlet metricFormatter = new MetricFormatter();\n\t\t\tthis._numberFormatter = metricFormatter.format.bind(metricFormatter);\n\t\t}\n\t\tthis._opts = opts;\n\t}\n}\n","// Keep the import below.\n// import { _ } from '@analytics/core';\nimport { _ } from './../../analytics/core';\n\nexport default class ForceDirectedMarks {\n  getMarks(opts) {\n\t\tconst marks = _.compact([\n    this.getNodeMarks(opts), \n    this.getNodeTextMarks(opts), \n    this.getLinkMarks(opts)\n  ]);\n\n\t\treturn marks;\n  }\n  \n  getNodeMarks(opts) {\n    return {\n      name: \"nodes\",\n      type: \"symbol\",\n      zindex: 1,\n      from: {\n        data: \"node-data\"\n      },\n      on: [{\n          trigger: \"fix\",\n          modify: \"node\",\n          values: \"fix === true ? {fx: node.x, fy: node.y} : {fx: fix[0], fy: fix[1]}\"\n        },\n        {\n          trigger: \"!fix\",\n          modify: \"node\",\n          values: \"{fx: null, fy: null}\"\n        }\n      ],\n      encode: {\n        enter: {\n          fill: {\n            scale: \"color\",\n            field: \"group\"\n          },\n          stroke: {\n            value: \"black\"\n          },\n          tooltip: {\n            signal: \"{Name: datum.name, Value: format(datum.volume, ',')}\"\n          },\n          size: {\n            scale: \"size\", \n            field: \"normalizeVolume\"\n          }\n        },\n        update: {\n          // size: {\n          //   signal: \"datum.volume ? datum.volume / 100 * nodeRadius / 10 : nodeRadius * nodeRadius * 2\"\n          // },\n          cursor: {\n            value: \"pointer\"\n          }\n        }\n      },\n\n      transform: [this.getForceTransform(opts)]\n    }; \n  }\n\n  getForceTransform(opts) {\n    return {\n      type: \"force\",\n      iterations: 300,\n      restart: {\n        signal: \"restart\"\n      },\n      static: {\n        signal: \"static\"\n      },\n      signal: \"force\",\n      forces: [{\n          force: \"center\",\n          x: {\n            signal: \"cx\"\n          },\n          y: {\n            signal: \"cy\"\n          }\n        },\n        {\n          force: \"collide\",\n          radius: {\n            signal: \"nodeRadius\"\n          }\n        },\n        {\n          force: \"nbody\",\n          strength: {\n            signal: \"nodeCharge\"\n          }\n        },\n        {\n          force: \"link\",\n          links: \"link-data\",\n          distance: {\n            signal: \"linkDistance\"\n          }\n        }\n      ]\n    }\n  }\n\n  getNodeTextMarks(opts) {\n    return {\n      type: \"text\",\n      name: \"node-text\",\n      from: {data: \"nodes\"},\n      zindex: 2,\n      encode: {\n        enter: {\n          align: {value: \"center\"},\n          baseline: {value: \"middle\"},\n          fontSize: {value: 12}, \n          fill: {value: \"black\"}\n        },\n        update: {\n          text: {signal: \"[substring(datum.datum.name, 0, floor(nodeRadius / 2.5)), getAdjustedVolume(datum.datum.volume)]\"},\n          x: {signal: \"datum.x\"},\n          y: {signal: \"datum.y\"},\n          tooltip: {\n            signal: \"{Name: datum.datum.name, Value: format(datum.datum.volume, ',')}\"\n          },\n          cursor: {\n            value: \"pointer\"\n          }\n        }\n      }\n    }\n  }\n\n  getLinkMarks(opts) {\n    return {\n      type: \"path\",\n      from: {\n        data: \"link-data\"\n      },\n      interactive: false,\n      encode: {\n        update: {\n          stroke: {\n            signal: `node ? getHighlightColor(node, datum, getChartOpts('${opts.chartID}')) : \"#ccc\"`\n          },\n          strokeWidth: {\n            field: \"normalizeValue\"\n          },\n          tooltip: {value: \"{left}\"},\n          zindex: {signal: `node ? getZIndex(node, datum, getChartOpts('${opts.chartID}')) : 0`}\n        }\n      },\n      transform: [{\n        type: \"linkpath\",\n        require: {\n          signal: \"force\"\n        },\n        shape: \"curve\",\n        sourceX: \"datum.source.x\",\n        sourceY: \"datum.source.y\",\n        targetX: \"datum.target.x\",\n        targetY: \"datum.target.y\"\n      }]\n    }\n  }\n\n  static create(opts) {\n\t\tconst instance = new this();\n\t\treturn instance.getMarks(opts);\n\t}\n}\n","// Keep the import below.\n// import { _ } from '@analytics/core';\nimport { _ } from './../../analytics/core';\n\nexport default class ForceDirectedScales {\n  getScales(opts) {\n\t\treturn _.compact([\n      this.getColorScales(opts),\n      this.getVolumeScale(opts)\n    ]);\n  }\n  \n  getColorScales(opts) {\n    return {\n      name: \"color\",\n      type: \"ordinal\",\n      domain: {\n        data: \"node-data\",\n        field: \"group\"\n      },\n      range: {\n        scheme: \"category20c\"\n      }\n    }\n  }\n\n  getVolumeScale(opts) {\n    return {\n      name: \"size\",\n      domain: {data: \"node-data\", field: \"normalizeVolume\"},\n      zero: false,\n      range: [200, 1000]\n    }\n  }\n\n  static create(opts) {\n\t\tconst instance = new this();\n\t\treturn instance.getScales(opts);\n\t}\n}","// Keep the import below.\n// import { _ } from '@analytics/core';\nimport { _ } from './../../analytics/core';\n\nexport default class ForceDirectedSignals { \n  getSignals(opts) {\n    return _.compact([\n      this.getCx(opts),\n      this.getCy(opts),\n      this.getNodeRadius(opts),\n      this.getNodeCharge(opts),\n      this.getLinkDistance(opts),\n      this.getStatic(opts),\n      this.getFix(opts), \n      this.getClicked(opts),\n      this.getNode(opts),\n      this.getRestart(opts)\n    ]); \n  }\n\n  getCx(opts) {\n    return {\n      name: \"cx\",\n      update: \"width / 2\"\n    }; \n  }\n\n  getCy(opts) {\n    return {\n      name: \"cy\",\n      update: \"height / 2\"\n    }; \n  }\n\n  getNodeRadius(opts) {\n    const bind = {\n      input: \"range\",\n      min: 30,\n      max: 75,\n      step: 1\n    }; \n\n    return {\n      name: \"nodeRadius\",\n      value: 20,\n      bind: opts.allowSignalBinds ? bind : null\n    }; \n  }\n\n  getNodeCharge(opts) {\n    const bind = {\n        input: \"range\",\n        min: -100,\n        max: 10,\n        step: 1\n      }\n\n    return {\n      name: \"nodeCharge\",\n      value: -30,\n      bind: opts.allowSignalBinds ? bind : null\n    }; \n  }\n\n  getLinkDistance(opts) {\n    const bind = {\n      input: \"range\",\n      min: 5,\n      max: 100,\n      step: 1\n    }\n\n    return {\n      name: \"linkDistance\",\n      value: 30,\n      bind: opts.allowSignalBinds ? bind : null\n    }; \n  }\n\n  getStatic(opts) {\n    console.log(\"Allow signal binds\", opts.allowSignalBinds); \n    const bind = {\n      \"input\": \"checkbox\"\n    }\n    \n    return {\n      name: \"static\",\n      value: true,\n      bind: opts.allowSignalBinds ? bind : null\n    }\n  }\n\n  getFix(opts) {\n    return {\n      description: \"State variable for active node fix status.\",\n      name: \"fix\",\n      value: false,\n      on: [{\n          events: \"symbol:mouseout[!event.buttons], window:mouseup\",\n          update: \"false\"\n        },\n        {\n          events: \"symbol:mouseover, text:mouseover\",\n          update: \"fix || true\"\n        },\n        {\n          events: \"[symbol:mousedown, window:mouseup] > window:mousemove!\",\n          update: \"xy()\",\n          force: true\n        }\n      ]\n    };\n  }\n\n  getClicked(opts) {\n    return {\n      description: \"Clicked an active node.\",\n      name: \"clicked\",\n      value: false,\n      on: [{\n          events: \"symbol:click\",\n          update: \"datum.name == 'Other Pages' ? loadMore() : null\"\n        }\n      ]\n    };\n  }\n\n  getNode(opts) {\n    return {\n      description: \"Graph node most recently interacted with.\",\n      name: \"node\",\n      value: null,\n      on: [{\n        events: \"symbol:mouseover\",\n        update: \"fix === true ? item() : node\"\n      },\n      {\n        events: \"text:mouseover\",\n        update: \"fix === true ? datum.datum : node\"\n      }]\n    };\n  }\n\n  getRestart(opts) {\n    return {\n      description: \"Flag to restart Force simulation upon data changes.\",\n      name: \"restart\",\n      value: false,\n      on: [{\n        events: {\n          signal: \"fix\"\n        },\n        update: \"fix && fix.length\"\n      }]\n    };\n  }\n\n  static create(opts) {\n\t\tconst instance = new this();\n\t\treturn instance.getSignals(opts);\n\t}\n}\n","export default class ForceDirectedVegaDataFormatter {\n  static format(opts) {\n    return new this().formatDataForVega(opts); \n  }\n\n  // TODO: Implement at a later time. \n  formatDataForVega(opts) { \n    const fakeFormattedData = opts.data; \n    const fakeAggregateData = {}; \n    return {formattedData: fakeFormattedData, aggregateData: fakeAggregateData}; \n  }\n}\n","/* eslint-disable no-mixed-operators */\nexport default class VizTooltip {\n\t/**\n\t * Shows a tooltip at a given position with HTML content.\n\t * @param targetRect - The bounding rect of the SVG element we are pointing the tooltip to. Has properties: x, y, width, height.\n\t * @param boundaryRect - The bounding rect which the tooltip can not be displayed outside. If the tooltip gets too close to a boundary, it will try to flip to a different orientation.  Has properties: x, y, width, height.\n\t * @param content - The HTML content displayed in the tooltip. Accepts an HTML string or assumes the input to be a DOM node if it's not a string.\n\t * @param padding - The amount of padding we want to add to push the tooltip out further\n\t * @param parent - The parent the tooltip will be attached to\n\t */\n\tstatic showTooltip(targetRect, boundaryRect, content, orientation, padding, parent, id) {\n\t\tlet tipDiv = parent.selectAll(`#${id}`).data([targetRect]); \n\n\t\ttargetRect.cx = targetRect.cx || targetRect.x + targetRect.width / 2;\n\t\ttargetRect.cy = targetRect.cy || targetRect.y + targetRect.height / 2;\n\t\ttargetRect.dx = targetRect.dx || targetRect.x + targetRect.width;\n\t\ttargetRect.dy = targetRect.dy || targetRect.y + targetRect.height;\n\t\tboundaryRect.dx = boundaryRect.dx || boundaryRect.x + boundaryRect.width;\n\t\tboundaryRect.dy = boundaryRect.dy || boundaryRect.y + boundaryRect.height;\n\n\t\tlet tipDivEnter = tipDiv\n\t\t\t.enter()\n\t\t\t.append('div')\n\t\t\t.classed('dv-tooltip', true)\n\t\t\t.attr('id', id)\n\t\t\t.style('top', 0)\n\t\t\t.style('left', 0);\n\t\ttipDivEnter.append('div').classed('content', true);\n\t\ttipDivEnter.append('b').classed('notch', true);\n\n\t\t// First clear out the content\n\t\ttipDiv.select('.content').html('');\n\n\t\t// Assume the content to be a DOM node if it's not a string\n\t\tif (typeof content !== 'string') {\n\t\t\ttipDiv\n\t\t\t\t.select('.content')\n\t\t\t\t.node()\n\t\t\t\t.appendChild(content);\n\t\t} else {\n\t\t\ttipDiv.select('.content').html(content);\n\t\t}\n\n\t\tlet tipDivNotch = tipDiv.select('.notch');\n\n\t\tlet tipNode = tipDiv.node();\n\t\tlet width = Math.min(tipNode.offsetWidth, boundaryRect.width);\n\t\tlet height = Math.min(tipNode.offsetHeight, boundaryRect.height);\n\t\tlet top = 0;\n\t\tlet left = 0;\n\t\tlet clamp = function(val, min, max) {\n\t\t\treturn Math.min(Math.max(min, val), max);\n\t\t};\n\n\t\tlet setTopAndLeft = function(_orientation) {\n\t\t\tlet tempLeft;\n\t\t\tlet tempTop;\n\t\t\tswitch (_orientation) {\n\t\t\t\tcase 'left':\n\t\t\t\t\ttempLeft = targetRect.x - width - padding;\n\t\t\t\t\ttempTop = targetRect.cy - height / 2;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'right':\n\t\t\t\t\ttempLeft = targetRect.x + targetRect.width + padding;\n\t\t\t\t\ttempTop = targetRect.cy - height / 2;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'top':\n\t\t\t\t\ttempLeft = targetRect.cx - width / 2;\n\t\t\t\t\ttempTop = targetRect.y - height - padding;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'bottom':\n\t\t\t\t\ttempLeft = targetRect.cx - width / 2;\n\t\t\t\t\ttempTop = targetRect.dy + padding;\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\treturn { left: tempLeft, top: tempTop };\n\t\t};\n\n\t\tlet snapVertical = function() {\n\t\t\tif (top < boundaryRect.y) top = boundaryRect.y; // snap to the top\n\t\t\tif (top + height > boundaryRect.dy) top = boundaryRect.dy - height; // snap to the bottom\n\t\t\ttipDivNotch.style('top', clamp(targetRect.cy - top - 5, 3, height - 13) + 'px');\n\t\t\ttipDivNotch.style('left', null);\n\t\t};\n\n\t\tlet snapHorizontal = function() {\n\t\t\tif (left < boundaryRect.x) left = boundaryRect.x; // snap to the left\n\t\t\tif (left + width > boundaryRect.dx) left = boundaryRect.dx - width; // snap to the right\n\t\t\ttipDivNotch.style('left', clamp(targetRect.cx - left - 5, 3, width - 13) + 'px');\n\t\t\ttipDivNotch.style('top', null);\n\t\t};\n\n\t\tlet determineNextViableOrientation = function() {\n\t\t\tlet dimensions;\n\t\t\tlet invalidOrientations = [];\n\t\t\tlet orientationPreference;\n\n\t\t\tswitch (orientation) {\n\t\t\t\tcase 'left':\n\t\t\t\t\torientationPreference = ['left', 'right', 'top', 'bottom'];\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'right':\n\t\t\t\t\torientationPreference = ['right', 'left', 'top', 'bottom'];\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'top':\n\t\t\t\t\torientationPreference = ['top', 'bottom', 'left', 'right'];\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'bottom':\n\t\t\t\t\torientationPreference = ['bottom', 'top', 'left', 'right'];\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tdimensions = setTopAndLeft('left');\n\t\t\tif (dimensions.left < boundaryRect.x) {\n\t\t\t\tinvalidOrientations.push('left');\n\t\t\t}\n\n\t\t\tdimensions = setTopAndLeft('right');\n\t\t\tif (dimensions.left + width > boundaryRect.dx) {\n\t\t\t\tinvalidOrientations.push('right');\n\t\t\t}\n\n\t\t\tdimensions = setTopAndLeft('top');\n\t\t\tif (dimensions.top < boundaryRect.y) {\n\t\t\t\tinvalidOrientations.push('top');\n\t\t\t}\n\n\t\t\tdimensions = setTopAndLeft('bottom');\n\t\t\tif (dimensions.top + height > boundaryRect.dy) {\n\t\t\t\tinvalidOrientations.push('bottom');\n\t\t\t}\n\n\t\t\treturn orientationPreference.filter(function(el) {\n\t\t\t\treturn invalidOrientations.indexOf(el) < 0;\n\t\t\t})[0];\n\t\t};\n\n\t\t// Determine where the tooltip can go\n\t\tlet nextViableOrientation = determineNextViableOrientation();\n\n\t\t// If there is a viable orientation, use it. Otherwise, just use whatever the user defined\n\t\tif (nextViableOrientation) {\n\t\t\torientation = nextViableOrientation;\n\t\t}\n\n\t\t// Finalize tooltip dimensions\n\t\tlet dimensions = setTopAndLeft(orientation);\n\t\tleft = dimensions.left;\n\t\ttop = dimensions.top;\n\n\t\tif (orientation === 'left' || orientation === 'right') {\n\t\t\tsnapVertical();\n\t\t} else {\n\t\t\tsnapHorizontal();\n\t\t}\n\n\t\ttipDiv.classed('top right left bottom hide', false).classed(orientation, true);\n\n\t\ttipDivEnter.style('top', top + 'px').style('left', left + 'px');\n\n\t\ttipDiv.style('top', top + 'px').style('left', left + 'px'); \n\t}\n\n\tstatic removeTooltip(parent, id) {\n\t\tparent.selectAll(`#${id}`).classed('hide', true);\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n// Keep import below. \n//import { d3, isNumeric } from '@analytics/core';\nimport { d3, isNumeric } from './../../analytics/core';\n\nimport vegaL10n from './../vegaL10n/vegaL10n';\nimport VizTooltip from './../VizTooltip';\n\n// Expression Functions\n// Vega allows custom functions that we can use for formatting, additional data processing, etc.\n// See docs: https://vega.github.io/vega/docs/api/extensibility/#expressions\nexport default class LineExpressionFunctions {\n\t//we will add each chart instance to this hash as they are created (when multiple charts are on the page, we need to store opts separately for each one)\n\tstatic registerChartInstance(vega, chartID, chartsOpts = {}) {\n    // Return the matching value in the registry (only one param), or undefined if not found.\n\t\tconst allCharts = vega.expressionFunction('getAllCharts')();\n    allCharts[chartID] = chartsOpts;\n    // R\n\t\tvega.expressionFunction('getAllCharts', () => allCharts);\n\t}\n\n  static registerStaticExpressions(vega) {\n\t\tvega.expressionFunction('getAllCharts', () => {\n\t\t\t//start with an empty object, will get filled as chart instances are created\n\t\t\treturn {};\n\t\t});\n\n\t\tvega.expressionFunction('getChartOpts', chartID => {\n\t\t\tconst getAllCharts = vega.expressionFunction('getAllCharts');\n\t\t\tconst allCharts = getAllCharts();\n\t\t\treturn allCharts[chartID];\n\t\t});\n\n    vega.expressionFunction('getHighlightColor', (node, link, chartOpts) => { \n      const NUM_EDGES = 5; \n      const topEdges = chartOpts.getTopVolumeEdges(node, chartOpts.links, NUM_EDGES, chartOpts); \n      for (let i = 0; i < topEdges.length; ++i) {\n        if (link.source.datum.name === topEdges[i].source.datum.name && link.target.datum.name === topEdges[i].target.datum.name) {\n          return chartOpts.swatchColors[i]; \n        }\n      }\n\n      return \"#ccc\"; \n    });\n\n    vega.expressionFunction('getZIndex', (node, link, chartOpts) => {\n      const NUM_EDGES = 5; \n      const topEdges = chartOpts.getTopVolumeEdges(node, chartOpts.links, NUM_EDGES, chartOpts);    \n      for (let i = 0; i < topEdges.length; ++i) {\n        if (link.source.datum.name === topEdges[i].source.datum.name && link.target.datum.name === topEdges[i].target.datum.name) {\n          return 1; \n        }\n      }\n\n      return 0; \n    });\n\n    vega.expressionFunction('getAdjustedVolume', volume => {\n      const abbreviations = ['', 'k', 'm', 'b']; \n      let adjustedVolume = parseInt(volume); \n      let iterations = 0; \n      while (adjustedVolume > 1000) {\n        adjustedVolume /= 1000; \n        ++iterations; \n      } \n\n      return Math.round(adjustedVolume) + abbreviations[iterations]; \n    });\n\n    vega.expressionFunction('checkValue', (value) => {\n      console.log(\"Checked Value:\", value); \n      return null; \n    });\n  }\n}","// Keep imports below.\n//import { d3 } from '@analytics/core';\n//import { l10n } from '@analytics/l10nify';\n\nimport d3 from './../../d3.js';\nimport { l10n } from './../../analytics/l10nify'; \n\nimport vegaL10n from './../vegaL10n/vegaL10n';\nimport VizTooltip from './../VizTooltip';\n\nexport default class ForceDirectedTooltip {\n  constructor(opts) { \n    this.opts = opts;\n\t}\n\n  getItemWidth(item) {\n    return item.bounds.x2 - item.bounds.x1;\n  }\n\n  getItemHeight(item) {\n    return item.bounds.y2 - item.bounds.y1;\n  }\n\n  getCx(item) {\n    return (this.getItemWidth(item) / 2) + item.bounds.x1;\n  }\n\n  getCy(item) {\n    return (this.getItemHeight(item) / 2) + item.bounds.y1; \n  }\n\n  /**\n   * Check if still floating over the previous node. \n   * @param event - A triggered event (usually called on 'mouseout')\n   * @param currentTooltip - The tooltip that is currently rendered (potentially will be removed)\n   */\n  checkIfOverNode(event, currentTooltip) {\n    // TODO: May need to make adjustments if padding is added later on... \n    const cx = this.getCx(currentTooltip); \n    const cy = this.getCy(currentTooltip);  \n    let radius = cx - currentTooltip.bounds.x1; \n    radius = Math.round(radius * 100) / 100; \n\n    // Directly over the center of circle in y-direction\n    if ((event.layerY === currentTooltip.cy) && (event.layerX > currentTooltip.bounds.x1) \n                                             && (event.layerX < currentTooltip.bounds.x2)) {\n      return true; \n    }\n\n    // Directly over the center of circle in x-direction\n    if ((event.layerX === currentTooltip.cx) && (event.layerY > currentTooltip.bounds.xy) \n                                             && (event.layerY < currentTooltip.bounds.xy)) {\n      return true; \n    }\n\n    // Use right triangles to calculate distance \n    const distanceFromCenter = \n      Math.sqrt(Math.pow(Math.abs(event.layerX - cx), 2) + Math.pow(Math.abs(event.layerY - cy), 2));\n\n    // event.layerX and event.layerY are slightly imprecise (values are always integers), \n    // so we subtract a small number below from the radius so the tooltips don't stick \n    // when the mouseout is triggered directly off the edge of the node. This means that \n    // the tooltips disappear slightly early, but prevents tooltips from incorrectly persisting. \n    const RADIUS_OFFSET = 1.5;  \n    return (radius - RADIUS_OFFSET) > distanceFromCenter; \n  }\n\n\tshow(handler, event, item, value) { \n\t\tif (!item) {\n\t\t\treturn;\n\t\t}\n    \n    // Adjust for 'text' mark tooltips. \n    let isEqualTooltip = false; \n    if (item.mark.name === \"node-text\") {\n      isEqualTooltip = this.currentTooltip && this.currentTooltip.datum.name === item.datum.datum.name; \n      item = item.datum; \n    }\n\n    // Note: Slightly different syntax\n    const container = handler._el;\n\n\t\t// when mousing out of a point, remove with a timeout\n\t\tif (event && event.vegaType === 'mouseout') {\n      const isStillOverNode = this.checkIfOverNode(event, this.currentTooltip);\n      //console.log(\"Is still over node:\", isStillOverNode);  \n\n      if (!isStillOverNode) {\n        const timeout = 500;\n        this.currentTooltip = null;\n\n        this.tooltipCancelId = setTimeout(() => {\n          VizTooltip.removeTooltip(d3.select(container), 'node-tooltip');\n        }, timeout);\n      }\n\t\t\treturn;\n\t\t}\n\n\t\t//if we are already over this tooltip don't show again\n\t\tif (item === this.currentTooltip || isEqualTooltip) {\n\t\t\treturn;\n\t\t} else {\n\t\t\tthis.currentTooltip = item;\n\t\t}\n\n    //ADOBE: create formatter to format tooltip information below (see LineTooltip.js for more). \n    const NUM_LINKS_TO_SHOW = 5; \n    const content = \n      this.opts.nodeTooltipContent({ data: item.datum }, {links: this.opts.getTopVolumeEdges(item.datum, this.opts.links, NUM_LINKS_TO_SHOW, this.opts)}, this.opts.swatchColors);\n\n    //calculate the bbox of the point we are hovering over\n    let x = item.bounds.x1 + this.opts.padding.left;\n    let y = item.bounds.y1 + this.opts.padding.top;\n    let width = this.getItemWidth(item);\n    let height = this.getItemHeight(item);\n     \n\t\t//before showing, cancel any existing timeouts\n\t\t//eg if the user moved to another dot before the 'mouseout' timeout is up,\n\t\t//we don't want to remove the tooltip of the next dot\n    clearTimeout(this.tooltipCancelId);\n\n    const targetRect = {\n      x,\n      width,\n      y,\n      height,\n    }; \n\n    const boundaryRect = {\n      y: 0,\n      x: 0,\n      height: container.offsetHeight,\n      width: container.offsetWidth,\n    }; \n\n\t\t//show the tooltip\n    // Note: The code below is a workaround. When the first tooltip displays, \n    // there is no node-tooltip in the DOM, which means the tooltip displays incorrectly\n    // (it displays in the top left corner only with no content information). \n    // This is due to the tipDiv.node() being null in the VizTooltip class. \n    // Catching the error allows the initial tooltip code to run, then immediately \n    // followed by displaying a functioning tooltip. \n    try {\n      VizTooltip.showTooltip(\n        targetRect,\n        boundaryRect,\n        content,\n        'left',\n        10,\n        d3.select(container),\n        'node-tooltip',\n      ); \n    } catch(error) {\n      VizTooltip.showTooltip(\n        targetRect,\n        boundaryRect,\n        content,\n        'left',\n        10,\n        d3.select(container),\n        'node-tooltip',\n      );\n    }\n  } \n}\n","// TODO: Update the below imports using the @analytics syntax.\n// TODO: Remove the .js at the end of the files later on...\nimport { _, MetricFormatter, isNumeric, moment, sleep } from './../../analytics/core';\nimport guid from './../../analytics/guid';\n\nimport ChartFactory from './../ChartFactory';\nimport VegaViz from '../VegaViz';\nimport vegaL10n from './../vegaL10n/vegaL10n';\nimport ForceDirectedMarks from './ForceDirectedMarks';\nimport ForceDirectedScales from './ForceDirectedScales';\nimport ForceDirectedSignals from './ForceDirectedSignals';\nimport ForceDirectedVegaFormatter from './ForceDirectedVegaDataFormatter';\nimport ForceDirectedExpressionFunctions from './ForceDirectedExpressionFunctions'; \nimport ForceDirectedTooltip from './ForceDirectedTooltip';  \nimport { getConstants } from './../VizConstants';\n\nconst { vega, vegaEmbed } = window;\n//register custom functions with vega\nForceDirectedExpressionFunctions.registerStaticExpressions(vega);\n/**\n * Parent class:\n * this.el - the current element storing the view.\n *\n *\n *\n *\n * Class Values:\n *\n * this.chartID - the id of the current chart.\n * this.lastRenderId - the id of the last desired render item.\n * this.vegaView - The current vega view for a Line Graph.\n * this.opts - The opts passed to setupChart. Should have a\n * form of this.opts - {\n *  dataSets: [\n *    data: [\n *      dateGranularity\n *    ]\n *  ],\n *  showLoadingState: function(vegaContainer), - should display a loading indicator on the new vegaContainer element based on the function passed in opts\n *  locale,\n *  shouldRenderSmallChart,\n *\n * }\n *\n *\n * this.setupChart(opts) - async:\n * - 1. assigns a new lastRenderId by calling this.cancelPendingRenders()\n * - 2. calls this.destroy() (class function for removing the previous view)\n * - 3. call this.validate(opts) (function in VegaViz) to make sure opts exists and it is not a unit test\n * - 4. Remove the actual element displayed on the screen: Remove the current .vega-container element shown on the screen.\n * - 5. Create a new div and add it to the 'vega-container' class.\n * - 6. Add the new div to the element (display it), showing a loading indicator if necessary.\n * - 7. Store everything necessary for a chart in a chartOptions object.\n * - 8. Pass the chartOptions to a LineVegaDataFormatter. This function returns formattedData and aggreggate data, which are used to update the chartOptions object.\n * - 9. Create a LineToolTip by passing the updated chartOptions.\n * - 10.\n *\n * this.validate() - returns false if this.dataSets does not exist.\n */\n\nexport default class ForceDirected extends VegaViz {\n  async draw(opts) {\n\t\tawait super.draw(opts);\n\t\tif (!this.chartID) {\n\t\t\tthis.chartID = guid.create();\n\t\t}\n     \n\t\tawait this.setupChart(opts);\n\t}\n\n  async setupChart(opts) {\n\t\t//the vegaEmbed call is async - cancel any previous renders that haven't finished\n\t\tconst currentRenderId = guid.create();\n\t\tthis.cancelPendingRenders({ newPendingRenderId: currentRenderId });\n\n\t\t// Destroy the last vega container so we can measure the appropriate chart dimensions from a clean slate\n\t\tthis.destroy();\n\n\t\tthis.opts = opts;\n\n    // Called in parent class. \n\t\tif (!this.validate(opts)) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet existing = this.el.querySelector('.vega-container');\n\t\tif (existing) {\n\t\t\texisting.remove();\n\t\t}\n\n\t\t//create the container\n\t\tconst vegaContainer = document.createElement('div');\n\t\tvegaContainer.classList.add('vega-container');\n\n\t\tif (this.shouldShowLoadingState(opts)) {\n\t\t\topts.showLoadingState(vegaContainer);\n\t\t\tthis.el.appendChild(vegaContainer);\n\t\t\t// set a timeout here to flush the dom changes we just made\n\t\t\t// if we don't, the thread will just keep plowing through and the spinner will never show\n\t\t\tawait sleep(500);\n\t\t} else {\n\t\t\tthis.el.appendChild(vegaContainer);\n\t\t}\n\n    // ADOBE: Handle localization here. \n\n\t\tconst chartOptions = {\n\t\t\t...opts,\n\t\t\theight: this.el.clientHeight,\n\t\t\twidth: this.el.clientWidth,\n\t\t\tpadding: this.padding,\n\t\t\tchartID: this.chartID,\n\t\t};\n\n    console.log(\"Height\", this.el.clientHeight); \n\n    //TODO: format the data for vega (right now it simply returns the data passed in). \n\t\tconst { formattedData, aggregateData } = ForceDirectedVegaFormatter.format(chartOptions);\n\t\tObject.assign(chartOptions, { formattedData, ...aggregateData });\n\n\t\t//TODO: create tooltip handler\n\t\tconst forceDirectedTooltip = new ForceDirectedTooltip(chartOptions);\n    chartOptions.links = chartOptions.formattedData[1].name === 'link-data' ? chartOptions.formattedData[1].values : chartOptions.formattedData[0].values; \n\t\tconst tooltipCallback = forceDirectedTooltip.show.bind(forceDirectedTooltip);\n \n\t\t//TODO: create a expression for the instance so we can reference options and custom instance functions inside of vega\n\t\tForceDirectedExpressionFunctions.registerChartInstance(vega, this.chartID, chartOptions);\n\n\t\t//TODO: embed the vega chart into the dom\n\t\tconst vegaSpec = this.getChartConfig(chartOptions);\n    //const embedOpts = { renderer: this.renderer, actions: false, tooltip: tooltipCallback };\n    const embedOpts = {tooltip: tooltipCallback}; \n\n\t\t// vegaEmbed will generate the canvas, and add the canvas to vegaContainer\n\t\t// it will also remove all children from vegaContainer beforehand (so it will remove the loading spinner we added)\n    // see here: https://github.com/vega/vega-embed/blob/940c44c1051ae2138cf00e05e2a8b05c1ece25bd/src/embed.ts#L296\n\t\tconst vegaView = await vegaEmbed(vegaContainer, vegaSpec, embedOpts);\n\n\t\t// because the vegaEmbed func is async, finalize any renders we cancelled above\n\t\t// if not cancelled, set as the new this.vegaView\n\t\tif (this.isCancelledRender(currentRenderId)) {\n\t\t\tvegaView.view.finalize();\n\t\t\tvegaView.view.container().remove();\n\t\t} else {\n      this.vegaView = vegaView;\n    } \n\t}\n\n\tshouldShowLoadingState(opts) {\n\t\t//use a hueristic to decide to show a loading spinner - only show for big data sets\n\t\t//for example concurrent viewers panel can have 15000 data points\n\t\t//let totalDataPoints = (opts.dataSets?.length ?? 0) * (opts.dataSets?.[0]?.data?.length ?? 0);\n    //return totalDataPoints > 10000;\n\n    // TODO: DECIDE LATER ON WHAT CONDITIONS TO SHOW A LOADING INDICATOR.\n    return true;\n  }  \n  \n\t// since vegaEmbed is async, allow for cancelling pending renders\n\t// if two render calls come in, we want the last one in to be what renders on the page\n\t// imagine an example where call \"A\" comes in, then \"B\", but B finishes async work before A.  We want A to be cancelled so that B is what gets rendered on the page\n\tcancelPendingRenders({ newPendingRenderId }) {\n\t\tthis.lastRenderId = newPendingRenderId;\n  }\n\n\tisCancelledRender(renderId) {\n\t\treturn renderId !== this.lastRenderId;\n  }\n \n\tdestroy() {\n\t\tif (this.vegaView) {\n\t\t\tthis.vegaView.view.finalize();\n\t\t\tthis.vegaView.view.container().remove();\n    }\n  }\n\n  /* \n\tvalidate() {\n\t\t// An array of datasets is required\n\t\tif (!this.dataSets) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst representativeData = this.dataSets[0]?.data?.[0];\n\n\t\t// Check that the first element is time\n\t\t// This still allows an empty dataset to pass\n\t\tif (representativeData && !(representativeData.value('x') instanceof Date)) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn super.validate(this._opts.dataSets);\n  }\n  */ \n\n\tgetChartConfig(opts) {\n    console.log(\"Padding: \", opts.padding);\n\t\tlet config = {\n      $schema: 'https://vega.github.io/schema/vega/v5.json',\n      // Fit within width/height, with width/height being the total.\n\t\t\tautosize: { type: 'fit', contains: 'padding' },\n\t\t\tpadding: opts.padding,\n\t\t\tbackground: getConstants().vizBackgroundColor,\n\t\t\twidth: opts.width,\n\t\t\theight: opts.height,\n\t\t\tdata: opts.formattedData,\n\t\t\tsignals: ForceDirectedSignals.create(opts),\n\t\t\tmarks: ForceDirectedMarks.create(opts),\n\t\t\tscales: ForceDirectedScales.create(opts),\n      config: {}\n\t\t};\n\n\t\treturn config;\n  } \n\n\tget padding() {\n    // Hardcoded values for now...\n    return { left: 0, top: 0, right: 0, bottom: 0 };\n\t}\n\n  /* \n\tgetMaxDataSetLength() {\n\t\tif (!this.dataSets.length) {\n\t\t\treturn 0;\n\t\t}\n\t\tconst longestDataSet = _.max(this.dataSets, ds => ds.data.length);\n\t\treturn longestDataSet.data.length;\n\t}\n\n\n\tgetPrecision(input) {\n\t\tconst metricFormatter = new MetricFormatter();\n\t\treturn metricFormatter.getCurrentPrecision(input);\n\t}\n\n\tcontainsAnomalyData() {\n\t\treturn this.dataSets.some(ds => ds.data.some(d => d.value('upperConfidenceBound')));\n\t}\n\n\tget dataSets() {\n\t\treturn this.opts.dataSets;\n\t}\n\n\tget anomaliesEnabled() {\n\t\treturn this.opts.showAnomalies && this.containsAnomalyData();\n\t}\n\n\tget anomalyRescaleIsEnabled() {\n\t\treturn this.opts.allowAnomaliesToRescale && this.anomaliesEnabled;\n\t}\n\n\tget dualYAxisIsEnabled() {\n\t\treturn this.opts.dualYAxis && this.dataSets.length === 2;\n\t}\n\n\tget normalizedIsEnabled() {\n\t\treturn this.opts.normalized && this.dataSets.length >= 2;\n\t}\n\n\tget normalizationRequired() {\n\t\treturn this.normalizedIsEnabled || this.dualYAxisIsEnabled;\n\t}\n\n\tget showMaxMinLabels() {\n\t\treturn this.opts.showMax || this.opts.showMin;\n\t}\n\n\tget showNormalizedAxis() {\n\t\treturn this.normalizedIsEnabled;\n\t}\n\n\tget renderer() {\n\t\t//render differently depending where the chart will be rendered (svg for PDF, canvas for HTML)\n\t\t//canvas won't scale well in PDF as the user resizes the PDF.  SVG lets the PDF redraw certain nodes (eg text) so they look crisp\n\t\t//SVG adds a lot of dom nodes that will slow down a browser page, using canvas cuts down to just one dom node\n\t\treturn this.opts.serverRender ? 'svg' : 'canvas';\n\t}\n\n\thighlightDataByIds(ids = []) {\n\t\t// TODO: Needs to be implemented differently from CloudViz since we don't have the DOM to manipulate\n\t}\n  */\n}\n\nChartFactory.registerChart(ForceDirected);\n"],"sourceRoot":""}